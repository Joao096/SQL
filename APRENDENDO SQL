--CAPITULO 4 INTRODUÇÃO A SELECT

-- SELECIONANDO OS DADOS DA TABELA CUSTOMER
SELECT * FROM CUSTOMER;

--SELECIONANDO COLUNAS ESPECIFICAS
SELECT CUSTOMER_ID, NAME FROM CUSTOMER;

--EFETUANDO CAULCULO(ADICIONANDO 7% NA COLUNA PRICE) NA INSTRUÇÃO SELECT
SELECT PRODUCT_ID,DESCRIPTION,PRICE,PRICE * 1.07 AS TAXED_PRICE
FROM PRODUCT;

--ARREDONDANDO OS VALORES DA COLUNA TAXED_PRICE
SELECT PRODUCT_ID, DESCRIPTION, PRICE, round(PRICE*1.07) AS TAXED_PRICE
FROM PRODUCT;

--CONCATENAÇÃO DE TEXTO
SELECT NAME, CITY || ',' || STATE AS LOCATION
FROM CUSTOMER;

SELECT NAME, STREET_ADDRESS||' '|| CITY || ',' || STATE || ' ' || ZIP AS SHIP_ADDRESS
FROM CUSTOMER;

--CAPITULO 5 UTILIZANDO WHERE
--EXPLORANDO O DATASET
SELECT * FROM  STATION_DATA;
-- EXPLORANDO A FUNÇÃO WHERE TRAZENDO INFORMAÇÕES DO ANO DE 2010.
SELECT * FROM STATION_DATA
WHERE YEAR = 2010;
--EXPLORANDO OS DADOS QUE POSSUI O ANO DIFERENTE DE 2010.
SELECT * FROM STATION_DATA
WHERE YEAR != 2010;
--OU
SELECT * FROM STATION_DATA
WHERE YEAR <> 2010;

--EXPLORANDO INFORMAÇOES ENTRE 2005 E 2010.
SELECT * FROM STATION_DATA
WHERE YEAR BETWEEN 2005 AND 2010;

--UTILIZANDO AND, OR, IN.
--O TRAZENDO INFORMAÇOES >= 2005 E <= 2010.
SELECT * FROM STATION_DATA
WHERE YEAR >= 2005 AND YEAR <= 2010;
-- TRAZENDO UMA INFORMAÇÃO DE MESES ESPECIFICOS.
SELECT * FROM STATION_DATA
WHERE MONTH = 3
OR month = 6
OR month = 9
OR month = 12;
--TRAZENDO INFORMAÇOES ACIMA DE FORMA MAIS EFICIENTE.
SELECT * FROM STATION_DATA
WHERE month IN (3,6,9,12);
--TRAZENDO INFORMAÇOES EXCETO OS MESES SELECIONADOS.
SELECT * FROM STATION_DATA
WHERE month NOT IN (3,6,9,12);
-- TRAZENDO TODOS OS MESE NOS QUAIS O RESTO DA DIVISAO POR 3 SEJA IGUAL A 0.
SELECT * FROM STATION_DATA
WHERE month % 3 = 0;
-- UTILIZANDO WHERE COM TEXTO.
SELECT * FROM STATION_DATA
WHERE report_code = '513A63';

SELECT * FROM STATION_DATA
WHERE report_codE IN ('513A63','1F8A7B','EF616A');
-- TRAZENDO INFORMAÇÕES DOS REPORT_CODE != 6.
SELECT * FROM STATION_DATA
WHERE length(report_code)!=6;
-- BUSCANDO INFORMAÇÕES ONDE O REPORT_CODE COMEÇE COM A LETRA A.
SELECT * FROM STATION_DATA
WHERE report_code LIKE 'A%';
-- BUSCANDO INFORMAÇÕES ONDE O REPORT_CODE TERMINE COM A LETRA A.
SELECT * FROM STATION_DATA
WHERE report_code LIKE '%A';
-- BUSCANDO INFORMAÇÕES ONDE O REPORT_CODE COMECE COM A LETRA B E TENHA C COMO A SEGUNDA LETRA.
SELECT * FROM STATION_DATA
WHERE report_code LIKE 'B_C%';

--Capitulo 6 ORDE BY E GROUP BY

--AGRUPANDO E CONTANDO E ORDENANDO DO MAIOR PARA O MENOR A QUANTIDADE DE RAIOS POR ANO.
SELECT YEAR,count(*) AS record_count
FROM STATION_DATA
WHERE rain = 1
GROUP BY YEAR
ORDER BY record_count DESC;
--AGRUPANDO POR MES E ANO QUE FORAM REGISTRADO A ICIDENCIA DE RAIOS.
SELECT MONTH, YEAR, count(*) AS record_count
FROM STATION_DATA
WHERE RAIN = 1
GROUP BY MONTH, YEAR;
-- AGRUPANDO AS MEDIAS DE TEMPERATURAS POR MES DOS ANOS 2000 EM DIANTE.
SELECT MONTH, round(avg(temperature)) AS avg_temp
FROM STATION_DATA
WHERE YEAR >= 2000
GROUP BY MONTH;

-- CAPITULO 7 INTRUÇÕES CASE.
--AGRUPANDO A VELOCIDADE DO VENTO.
SELECT report_code, year,month, day,wind_speed,
CASE
    WHEN wind_speed >= 40 THEN 'HIGH'
    WHEN wind_speed >= 30 AND wind_speed <0 THEN 'MODERATE'
    ELSE 'LOW'
END AS wind_severity
FROM STATION_DATA;

SELECT YEAR,
CASE
    WHEN wind_speed >= 40 THEN 'HIGH'
    WHEN wind_speed >= 30 THEN 'MODERATE'
    ELSE 'LOW'
END AS wind_severity,
count(*) AS record_count
FROM STATION_DATA
GROUP BY YEAR
ORDER BY record_count DESC;

--CASE "ZERO/NULL"
SELECT year, month,
SUM(CASE WHEN tornado = 1 THEN precipitation ELSE 0 END) as tornado_precipitation,
SUM(CASE WHEN tornado = 0 THEN precipitation ELSE 0 END) as non_tornado_precipitation
FROM STATION_DATA
GROUP BY year, month;
--SELECIONANDO O VALOR MAXIMO DE PRECIPITAÇÃO OU NÃO.
SELECT year,
MAX(CASE WHEN tornado = 1 THEN precipitation ELSE null END) AS max_tornado_precipitation,
MAX(CASE WHEN tornado = 0 THEN precipitation ELSE null END) AS max_non_tornado_precipitation
FROM STATION_DATA
GROUP BY year;
--MEDIA DE TEMPERATURA QUANDO HOUVE OU NÃO CHUVA.
SELECT month,
round(AVG(CASE WHEN rain OR hail THEN temperature ELSE null END),2) AS avg_precipitation_temp,
round(AVG(CASE WHEN NOT(rain or hail)THEN temperature ELSE null END),2) AS avg_non_precipitation_temp
FROM STATION_DATA
WHERE year > 2000
GROUP BY month;
